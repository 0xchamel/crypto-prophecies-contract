/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface VestingStorageContract
  extends Truffle.Contract<VestingStorageInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<VestingStorageInstance>;
}

export interface Released {
  name: "Released";
  args: {
    amount: BN;
    beneficiary: string;
    0: BN;
    1: string;
  };
}

export interface Revoked {
  name: "Revoked";
  args: {
    beneficiary: string;
    0: string;
  };
}

type AllEvents = Released | Revoked;

export interface VestingStorageInstance extends Truffle.ContractInstance {
  investors(
    arg0: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{
    0: string;
    1: BN;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
    6: BN;
    7: boolean;
  }>;

  released(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  token(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    investors(
      arg0: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{
      0: string;
      1: BN;
      2: BN;
      3: BN;
      4: BN;
      5: BN;
      6: BN;
      7: boolean;
    }>;

    released(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    token(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
